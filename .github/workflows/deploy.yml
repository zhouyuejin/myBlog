name: Deploy VuePress Blog to Aliyun

on:
  push:
    branches: [release]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Install dependencies
        run: pnpm install
        continue-on-error: false

      - name: Build
        run: pnpm docs:build
        continue-on-error: false

      - name: Verify Nginx Config Directory
        run: |
          ls -la nginx-config/
          cat nginx-config/blog.conf

      - name: Test SSH Connection
        run: |
          mkdir -p ~/.ssh
          # 验证密钥是否存在且非空
          if [ -z "${{ secrets.ALIYUN_SERVER_SSH_KEY }}" ]; then
            echo "错误: ALIYUN_SERVER_SSH_KEY密钥为空"
            exit 1
          fi
          
          # 写入并验证密钥文件
          echo "${{ secrets.ALIYUN_SERVER_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # 显示密钥文件信息（不暴露内容）
          echo "密钥文件信息:" 
          ls -la ~/.ssh/
          echo "密钥文件大小: $(wc -c < ~/.ssh/deploy_key) 字节"
          
          # 检查密钥格式是否有效
          if ! ssh-keygen -l -f ~/.ssh/deploy_key; then
            echo "错误: 私钥格式无效"
            exit 1
          fi
          
          # 测试SSH连接（最高 verbosity）
          echo "正在测试SSH连接（最高详细度）..."
          ssh -vvv -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ${{ secrets.ALIYUN_SERVER_USER }}@${{ secrets.ALIYUN_SERVER_HOST }} 'echo SSH连接测试成功'
          
          # 如果公钥认证失败，尝试密码认证
          if [ $? -ne 0 ]; then
            echo "公钥认证失败。尝试密码认证..."
            # 注意：这仅在服务器启用密码认证时有效
            ssh -vvv -o StrictHostKeyChecking=no -o PreferredAuthentications=password ${{ secrets.ALIYUN_SERVER_USER }}@${{ secrets.ALIYUN_SERVER_HOST }} 'echo SSH连接测试成功'
          fi
          ls -la ~/.ssh/

      - name: Upload Nginx Config
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ALIYUN_SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvOv"
          SOURCE: "nginx-config/"
          REMOTE_HOST: ${{ secrets.ALIYUN_SERVER_HOST }}
          REMOTE_USER: ${{ secrets.ALIYUN_SERVER_USER }}
          TARGET: "/etc/nginx/sites-available/"
          DEBUG: "true"

      - name: Apply Nginx Config
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ALIYUN_SERVER_HOST }}
          username: ${{ secrets.ALIYUN_SERVER_USER }}
          key: ${{ secrets.ALIYUN_SERVER_SSH_KEY }}
          script: |
            ln -sf /etc/nginx/sites-available/blog.conf /etc/nginx/sites-enabled/
            nginx -t
            systemctl reload nginx

      - name: Deploy to Aliyun Server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ALIYUN_SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "docs/.vuepress/dist"
          REMOTE_HOST: ${{ secrets.ALIYUN_SERVER_HOST }}
          REMOTE_USER: ${{ secrets.ALIYUN_SERVER_USER }}
          TARGET: "/usr/share/nginx/html/blog"

      - name: Deploy success notification
        if: success()
        run: echo "部署成功！博客已更新到阿里云服务器"

      - name: Deploy failure notification
        if: failure()
        run: |
          echo "部署失败！请查看日志进行排查"
          exit 1
